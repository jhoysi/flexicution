//
// Variables
// =============================================================================
// Grid settings

$flex-grid-columns: 12 !default;
$flex-grid-gutter-width: 30px !default;




//
// Mixins
// =============================================================================
// Generate semantic grid columns with these mixins.

//
// make-container()
// ----------
// Creates a fluid (or not) container for a series of rows
// Based on Bootstrap's .container class

@mixin make-container($max-width: null, $fluid: false) {
  width: 100%;
  margin-right: auto;
  margin-left: auto;
  
  @if($max-width != null) {
    max-width: $max-width;
  }
  @if($fluid == false) {
    padding-right: 15px;
    padding-left: 15px;
  } else {
    padding-right: 0;
    padding-left: 0;
  }
}

//
// make-row()
// ----------
// Creates a wrapper for a series of columns

@mixin make-row($gutter: $flex-grid-gutter-width) {
  box-sizing: border-box;
  display: flex;
  flex: 0 1 auto;
  flex-direction: row;
  flex-wrap: wrap;
  margin-left:  ceil($gutter / -2);
  margin-right: floor($gutter / -2);
  
  // Modifiers
  &.-reverse { flex-direction: row-reverse; }
  
  &.-no-gutters {
    margin-left: 0;
    margin-right: 0;
  }
}


//
// make-column()
// -------------
// Generates semantic columns for a given width and viewport size

@mixin make-column($columns, $gutter: $flex-grid-gutter-width, $media-query: null, $min-max: null) {
  $column-width: percentage($columns / $flex-grid-columns);
  $media-min-max: 'min';

  @if ($gutter == null) {
    $gutter: $flex-grid-gutter-width;
  }

  @if ($min-max != null) {
    $media-min-max: $min-max;
  }

  box-sizing: border-box;
  flex: 0 1 auto;
  position: relative;

  @if ($media-query != null) {
    @media (#{$media-min-max}-width: $media-query) {
      flex-basis: $column-width;
      max-width: $column-width;
      padding-left:  ($gutter / 2);
      padding-right: ($gutter / 2);
    }
  } @else {
    flex-basis: $column-width;
    max-width: $column-width;
    padding-left:  ($gutter / 2);
    padding-right: ($gutter / 2);
  }

  // Modifiers
  &.-no-gutters {
    padding-left: 0;
    padding-right: 0;
  }
}


//
// make-column-offset()
// --------------------

@mixin make-column-offset($columns, $media-query: null, $min-max: null) {
  $column-offset: percentage($columns / $flex-grid-columns);
  $media-min-max: 'min';

  @if ($min-max != null) {
    $media-min-max: $min-max;
  }

  @if ($media-query != null) {
    @media (#{$media-min-max}-width: $media-query) {
      margin-left: $column-offset;
    }
  } @else {
    margin-left: $column-offset;
  }
}




//
// Grid Generation Mixins
// =============================================================================

//
// calc-grid-column()
// ------------------
// Helper mixin used by `loop-grid-columns()` to generate semantic column classes

@mixin calc-grid-column($index, $class, $type) {
  @if ($type == width) and ($index > 0) {
    .col-#{$class}-#{$index} {
      flex-basis: percentage($index / $flex-grid-columns);
      max-width: percentage($index / $flex-grid-columns);
    }
  }

  @if ($type == offset) {
    .col-#{$class}-offset-#{$index} {
      margin-left: percentage($index / $flex-grid-columns);
    }
  }
}


//
// loop-grid-columns()
// -------------------
// Helper mixin used by `make-grid()` to loop over the `calc-grid-column()` mixin

@mixin loop-grid-columns($columns, $class, $type) {
  @for $i from 0 through $columns {
    @include calc-grid-column($i, $class, $type);
  }
}


//
// make-grid()
// -----------
// Generate grid classes and modifiers

@mixin make-grid($class) {
  @include loop-grid-columns($flex-grid-columns, $class, width);
  @include loop-grid-columns($flex-grid-columns, $class, offset);

  // Adaptive column sizing
  .col-#{$class} {
    flex-basis: 0;
    flex-grow: 1;
    max-width: 100%;
  }
  
  // Modifiers
  &.-no-gutters {
    padding-left: 0;
    padding-right: 0;
  }

  // Breakpoint-specific column modifiers
  .-#{$class}-first { order: -1; }

  .-#{$class}-last { order: 1; }

  .-#{$class}-start {
    justify-content: flex-start;
    text-align: start;
  }

  .-#{$class}-center {
    justify-content: center;
    text-align: center;
  }

  .-#{$class}-end {
    justify-content: flex-end;
    text-align: end;
  }

  .-#{$class}-no-gutters {
    padding-left: 0;
    padding-right: 0;
  }

  .-#{$class}-top { align-items: flex-start; }

  .-#{$class}-middle { align-items: center; }

  .-#{$class}-bottom { align-items: flex-end; }

  .-#{$class}-space-around { justify-content: space-around; }

  .-#{$class}-space-between { justify-content: space-between; }
}
